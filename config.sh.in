# project configuration file

# This file contains all configuration variables for the project.
# Usage:
#  1. In the section "project configuration", it must be specified, which
#     components will be used in the project. 
#     If a custom application is used over a remote git repository, the
#     variable "use_custom_application" must be set to "true.
#     The variable "custom_application_git_remote_address" in the section
#     "variables for the custom application project" must be set to the
#     address of the remote git repository.
#  2. The variables in the section "variables for deploy.sh script"
#     must be set according to the target platform.
#  3. All other variables have default values which are fine for most
#     of the projects. For specific needs, they can also be changed.
#  4. The workflow will be:
#       - The "clone.sh" script will clone all remote repositories.
#       - The application or library is developed.
#       - The "make.sh" script builds the whole project whith CMake and make.
#       - The "deploy.sh" script deploys the binaries to the target. Make sure
#         the files are specified in the file "deploy.txt".
#       - The "clean.sh" script cleans the build and install directory.




wd="$(pwd)"                 # the working directory of the project.
build_dir="$wd"/build-armhf # build dir



# project configuration variables for all the scripts
#------------------------------------------------------------------------------
# The "use" variables specify what components will be used in the project.
# The "custom_application_name" specifies the name of the custom application.

use_ros=true
use_custom_application=true



# variables for the custom application project
#------------------------------------------------------------------------------
# The "git" variables specify where the custom application project is cloned from
# and what version is checked out (any git reference (tag/branch/hash) can be set).
# The "required_version" variables specify the versions of the libraries
# which must be used in the custom application project.

custom_application_name=simple-motor-control

custom_application_git_remote_address=https://github.com/eeros-project/simple-motor-control.git
custom_application_git_version=master

custom_application_source_dir="$wd/$custom_application_name"
custom_application_build_dir="$build_dir/$custom_application_name"

eeros_required_version=1.3
bbblue_eeros_required_version=1.3
ros_eeros_required_version=1.0



# variables for make.sh script
#------------------------------------------------------------------------------
# The "rm_build_install_dir" variable specifies, if the build and the install
# directory is removed prior to a build run.

rm_build_install_dir=false



# variables for cross compilation environment
#------------------------------------------------------------------------------
# The "environment_setup_script" variable specifies the setup script of the cross
# compilation SDK, which is sourced during running "make.sh" script. Typically,
# the SDK script sets the needed environment variables in the current shell session.
# It makes sense to choose a SDK installation location where the user has full
# permissions. Otherwise, make.sh needs super-user rights (sudo bash make.sh).
# The "sdk_install_dir" variable specifies the directory in the SDK sysroot,
# where the libraries and applications (EEROS, sim-eeros, ...) are installed.
# Typically, the default value ist fine.

environment_setup_script=/opt/ost-distro/1.0/environment-setup-cortexa8hf-neon-poky-linux-gnueabi
sdk_install_dir=opt/custom_install



# ros setup script
#------------------------------------------------------------------------------
# The "ros_setup_script" variable specifies the ROS setup script which is sourced
# during running "make.sh" script if ROS is used.

ros_setup_script=/opt/ost-distro/1.0/sysroots/cortexa8hf-neon-poky-linux-gnueabi/opt/ros/melodic/setup.bash



# variables for deploy.sh script
#------------------------------------------------------------------------------
# The "target_IP_address" variable specifies the IP address or hostname
# of the target. The deploy script transmits the files to the target using scp.
# The "target_username" variable specifies the user name, which is used by
# scp when the files are transmitted. In general, it is not necessary to change
# these values unless the network settings and/or the user name was changed on
# the target.
# The "target_application_folder" variable specifies the location on the
# target, where the application will be copied to by scp.

target_IP_address=192.168.7.2
target_username=ost
target_application_folder=/home/ost/

